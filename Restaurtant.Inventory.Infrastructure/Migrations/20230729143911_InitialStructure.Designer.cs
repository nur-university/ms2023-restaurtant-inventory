// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant.Inventory.Infrastructure.EF.Contexts;

#nullable disable

namespace Restaurtant.Inventory.Infrastructure.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    [Migration("20230729143911_InitialStructure")]
    partial class InitialStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Restaurant.Inventory.Infrastructure.EF.ReadModel.ItemReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("itemId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("codigo");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("costo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("nombre");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("Id");

                    b.ToTable("item");
                });

            modelBuilder.Entity("Restaurant.Inventory.Infrastructure.EF.ReadModel.TransaccionItemReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("transaccionItemId");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("costoTotal");

                    b.Property<decimal>("CostoUnitario")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("costoUnitario");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("itemId");

                    b.Property<Guid>("TransaccionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("transaccionId");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("TransaccionId");

                    b.ToTable("transaccionItem");
                });

            modelBuilder.Entity("Restaurant.Inventory.Infrastructure.EF.ReadModel.TransaccionReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("transaccionId");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaAnulacion");

                    b.Property<DateTime?>("FechaConfirmacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaConfirmacion");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaRegistro");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("transaccion");
                });

            modelBuilder.Entity("Restaurant.Inventory.Infrastructure.EF.ReadModel.TransaccionItemReadModel", b =>
                {
                    b.HasOne("Restaurant.Inventory.Infrastructure.EF.ReadModel.ItemReadModel", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Inventory.Infrastructure.EF.ReadModel.TransaccionReadModel", "Transaccion")
                        .WithMany("Items")
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("Restaurant.Inventory.Infrastructure.EF.ReadModel.TransaccionReadModel", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
